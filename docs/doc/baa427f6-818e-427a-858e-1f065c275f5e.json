{
    "summary": "The code sets up a functional component, Feed, which displays either a welcome message or information about the selected neuron depending on whether one is chosen. It checks for the neuron selection in URL parameters and renders additional panes such as explanation, dataset list, top tokens, and similar neurons if an active neuron is present; otherwise, it shows a welcome message.",
    "details": [
        {
            "comment": "The code imports necessary components and sets up the Feed component, which displays a welcome message or information about the selected neuron. It checks if there is a neuron selected based on parameters passed in the URL, and if not, it displays null. If a neuron is selected, it displays the layer and neuron number.",
            "location": "\"/media/root/Toshiba XG3/works/automated-interpretability/docs/src/neuron-viewer/src/feed.jsx\":0-37",
            "content": "import * as Panes from \"./panes\"\nimport React, { useEffect } from \"react\"\nimport Welcome from \"./welcome\"\nimport { useState } from \"react\"\nimport { useParams, Link } from \"react-router-dom\"\nexport default function Feed() {\n  const params = useParams()\n  // If params is missing either index, there's no neuron selected.\n  let activeNeuron;\n  if (params.layer === undefined || params.neuron === undefined) {\n    activeNeuron = null\n  } else {\n    // Grab the layer and neuron indices from the params, casting them to ints.\n    activeNeuron = {\n      \"layer\": parseInt(params.layer),\n      \"neuron\": parseInt(params.neuron),\n    }\n  }\n  const Pane = ({ children }) => (\n    <div className=\"flex flex-col h-full\">{children}</div>\n  )\n  return (\n    <div>\n      <div>\n        <h2 className=\"flex flex-row\">\n          <Link to=\"/\">Neuron Viewer</Link>\n        </h2>\n        {activeNeuron && (\n          <h3 className=\"flex flex-row\">\n            Neuron {activeNeuron.layer}:{activeNeuron.neuron}\n          </h3>\n        )}\n      </div>\n      <div"
        },
        {
            "comment": "This code defines a functional component that renders a layout for the neuron viewer. If an active neuron is present, it displays explanation, dataset list, top tokens, and similar neurons panes. Otherwise, it shows a welcome message.",
            "location": "\"/media/root/Toshiba XG3/works/automated-interpretability/docs/src/neuron-viewer/src/feed.jsx\":38-63",
            "content": "        style={{ width: '100%', padding: '0px 80px', margin: \"auto\", overflow: \"visible\" }}\n      >\n        <ul role=\"list\" className=\"mb-8 mt-10\">\n          {activeNeuron ?\n            <>\n              <Pane>\n                {React.createElement(Panes[\"Explanation\"], { activeNeuron })}\n              </Pane>\n              <Pane>\n                {React.createElement(Panes[\"DatasetList\"], { activeNeuron })}\n              </Pane>\n              <Pane>\n                {React.createElement(Panes[\"TopTokens\"], { activeNeuron })}\n              </Pane>\n              <Pane>\n                {React.createElement(Panes[\"SimilarNeurons\"], { activeNeuron })}\n              </Pane>\n            </> :\n            <Welcome/>\n          }\n        </ul>\n      </div>\n    </div>\n  )\n}"
        }
    ]
}